indels <- stack(indels)
end(indels[which(names(indels) == 'I')]) <- start(indels[which(names(indels) == 'I')])
seqinfo(indels) <- seqinfo(aln)
del <- indels[which(names(indels) == 'D')]
ins <- indels[which(names(indels) == 'I')]
alnCoverage <- GenomicAlignments::coverage(aln)[[1]]
delCoverage <- GenomicAlignments::coverage(del)
#in case del coverage deosn't cover the whole alignment
#fill in the remaining bases with 0 values
delCoverage <- c(delCoverage, rep(0, length(alnCoverage) - length(delCoverage))) #have a NaN input
insCoverage <- GenomicAlignments::coverage(ins)
#fill in the remaining bases with 0 values
insCoverage <- c(insCoverage, rep(0, length(alnCoverage) - length(insCoverage)))
indelCoverage <- GenomicAlignments::coverage(indels)
#fill in the remaining bases with 0 values
indelCoverage <- c(indelCoverage, rep(0, length(alnCoverage) - length(indelCoverage))) #i silenced these
df <- data.frame('seqname' = levels(seqnames(aln))[1],
'sample' = sampleName,
'bp' = 1:length(alnCoverage),
'cov' = as.vector(alnCoverage),
'del' = as.vector(delCoverage),
'ins' = as.vector(insCoverage),
'indel' = as.vector(indelCoverage))
#add some more stats:
df$delRatio <- ifelse(df$cov > 0, df$del/df$cov, 0)
df$insRatio <- ifelse(df$cov > 0, df$ins/df$cov, 0)
df$indelRatio <- ifelse(df$cov > 0, df$indel/df$cov, 0)
#print bedgraph file for indels
indelScoresFile <- file.path(outDir, paste0(sampleName,'.indelScores.bedgraph'))
printBedGraphFile(file = indelScoresFile,
trackInfo = paste(sampleName, 'indel score (insertions + deletions / coverage per base)'),
scores = df[,c('seqname', 'bp', 'indelRatio')])
#print bedgraph file for deletions
deletionScoresFile <- file.path(outDir, paste0(sampleName,'.deletionScores.bedgraph'))
printBedGraphFile(file = deletionScoresFile,
trackInfo = paste(sampleName, 'deletion score (deletions / coverage per base)'),
scores = df[,c('seqname', 'bp', 'delRatio')])
#print bedgraph file for insertions
insertionScoresFile <- file.path(outDir, paste0(sampleName,'.insertionScores.bedgraph'))
printBedGraphFile(file = insertionScoresFile,
trackInfo = paste(sampleName, 'insertion score (insertions / coverage per base)'),
scores = df[,c('seqname', 'bp', 'insRatio')])
#print coverage stats to file
statsOutputFile <- file.path(outDir, paste0(sampleName,'.coverageStats.tsv'))
write.table(x = df, file = statsOutputFile, append = T,
sep = '\t', quote = F, row.names = F, col.names = T)
return(indels)
}
summarizeInDels <- function(readsWithInDels) {
indelCoords <- data.table::data.table('qname' = as.vector(mcols(readsWithInDels)$name),
'start' = start(readsWithInDels),
'end' = end(readsWithInDels),
'type' = names(readsWithInDels))
#for insertions, end should be the same as start
indelCoords[type == 'I']$end <- indelCoords[type == 'I']$start
indelCoords$ID <- paste(indelCoords$start, indelCoords$end, sep = ':')
dt <- indelCoords[,length(qname), by = c('ID', 'start', 'end', 'type')]
colnames(dt)[5] <- 'ReadSupport'
dt$width <- dt$end - dt$start + 1
dt <- dt[order(ReadSupport, decreasing = T)]
return(dt)
}
#' @param cutStart expected cutting site start pos for the sgRNA
#' @param cutEnd expected cutting site end pos for the sgRNA
#' @param bamFile path to bam file
#' @param extend (integer, default 3 bp) extend the searching area from cutting
#'   sites in either direction
countEventsAtCutSite <- function(seqName, cutStart, cutEnd, bamFile, readsWithInDels, extend = 3) {
if(cutEnd < cutStart) {
stop("End position of cutting site must be larger than start position\n")
}
if(cutStart < 0 | cutEnd < 0) {
stop("Start/End positions of cutting sites must be positive values")
}
cutStartExt <- cutStart - extend
cutEndExt <- cutEnd + extend
# find the total number of reads whose alignments overlap the extended region of the cut-site
aln <- readGAlignments(bamFile, param = ScanBamParam(what="qname",
which = GRanges(seqnames = seqName,
ranges = IRanges(start = cutStartExt,
end = cutEndExt),
strand = '*')))
# find the number of reads with deletions that start or end within the
# extended region of the cut-site
indelsAtCutSites <- readsWithInDels[(start(readsWithInDels) >= cutStartExt &
start(readsWithInDels) <= cutEndExt) |
(end(readsWithInDels) >= cutStartExt &
end(readsWithInDels) <= cutEndExt),]
stats <- data.frame('indel' = length(indelsAtCutSites),
'del' = sum(names(indelsAtCutSites) == 'D'),
'ins' = sum(names(indelsAtCutSites) == 'I'),
'coverage' = length(aln))
return(stats)
}
printBedFile <- function(outDir, sampleName, df, tracktype) {
outfile <- file.path(outDir, paste0(sampleName, '.', tracktype, ".bed"))
writeLines(text = paste0("track name=\"",sampleName," top 100 ",tracktype," useScore=1"),
con = outfile)
write.table(x = df,
file = outfile,
quote = F, sep = '\t', col.names = F, row.names = F, append = T)
}
readsWithInDels <- printCoverageStats(bamFile, sampleName, outDir)
#BFP
dfBFP <- read.table("/home/edanner/workspace/pigx_crispr/myData/BFP/indelStats/BFP.coverageStats.tsv", header=TRUE)
plot(dfBFP$bp, dfBFP$indel)
plot(tapply(dfBFP$NoDelRatio, cut(dfBFP$bp, seq(1, 2072, by=5)), mean))
#BFP
dfBFP <- read.table("/home/edanner/workspace/pigx_crispr/myData/BFP/indelStats/BFP.coverageStats.tsv", header=TRUE)
plot(dfBFP$bp, dfBFP$NoDelRatio,
type = "h",
lwd = 2,
xlab = "Base Position",
main = "% of the 1100 BFP+ reads containing each base pair",
ylab = "% of reads containing the base",
ylim = c(0.5, 1))
#BFP
dfBFP <- read.table("/home/edanner/workspace/pigx_crispr/myData/BFP/indelStats/BFP.coverageStats.tsv", header=TRUE)
plot(dfBFP$bp, dfBFP$NoDelRatio,
type = "h",
lwd = 2,
xlab = "Base Position",
main = "% of the 1100 BFP+ reads containing each base pair",
ylab = "% of reads containing the base",
ylim = c(0, 1))
#venus
dfVENUS <- read.table("/home/edanner/workspace/pigx_crispr/myData/Venus/indelStats/VenusDel.coverageStats.csv", header=TRUE)
plot(dfVENUS$bp, dfVENUS$NoDelRatio,
type = "h",
lwd = 2,
xlab = "Base Position",
main = "% of the 5000 Venus+ reads containing each base pair",
ylab = "% of reads containing the base",
ylim = c(0.5, 1))
bin <- 10
binVenus <- tapply(dfVENUS$NoDelRatio, cut(dfVENUS$bp, seq(1, 1081, by=bin)), mean)
plot(binVenus, xlab = "BP", type = "h", lwd = 5)
plot(dfVENUS$bp, dfVENUS$NoDelRatio,
type = "h",
lwd = 2,
xlab = "Base Position",
main = "% of the 5000 Venus+ reads containing each base pair",
ylab = "% of reads containing the base",
ylim = c(0.5, 1))
#mCherry
dfmCherry <- read.table("/home/edanner/workspace/pigx_crispr/myData/mCherry/indelStats/BFP.mCherryStats.tsv", header=TRUE)
str(dfmCherry)
plot(dfmCherry$bp, dfmCherry$Ratio,
type = "h",
lwd = 2,
xlab = "Base Position",
main = "% of the 650 mCherry+ reads containing each base pair",
ylab = "% of reads containing the base",
ylim = c(0.5, 1))
#this takes the info from the cut site file and does anlaysis
cutSiteStats <- do.call(rbind, lapply(1:nrow(cutSites), function(i) {
x <- cutSites[i,]
guide <- x[[1]]
cutStart <- as.numeric(x[[2]])
cutEnd <- cutStart + 1
stats <- countEventsAtCutSite(seqName = seqName,
cutStart = cutStart,
cutEnd = cutEnd,
bamFile = bamFile,
readsWithInDels = readsWithInDels,
extend = 3)
stats <- cbind(data.frame("sample" = sampleName,
"sgRNA" = guide,
"cutStart" = cutStart,
"cutEnd" = cutEnd), stats)
#efficiency : number of indels that originate around the cut-site
#             divided by the read coverage around the cut-site
stats$indelEfficiency <- round(stats$indel / stats$cov * 100, 2)
return(stats)
}))
readsWithInDels <- printCoverageStats(bamFile, sampleName, outDir)
aln <- readGAlignments(bamFile, param = ScanBamParam(what="qname"))
bamFile
aln
indels <- GenomicAlignments::cigarRangesAlongReferenceSpace(cigar = cigar(aln),
ops = c('I', 'D'),
with.ops = T, pos = start(aln))
indels
names(indels) <- mcols(aln)$qname
indels
indels <- GenomicAlignments::cigarRangesAlongReferenceSpace(cigar = cigar(aln),
ops = c('I', 'D'),
with.ops = T, pos = start(aln))
indels
# this
names(indels) <- mcols(aln)$qname
indels
indels <- stack(indels)
indels
which(names(indels) == 'D')
names(indels)
(names(indels)
names(indels)
names(indels)
#BFP
dfBFP <- read.table("/home/edanner/workspace/V2Seq/Analysis/output/TargetedBFP/BFPdata.coverageStats.tsv", header=TRUE)
plot(dfBFP$bp, dfBFP$delRatio,
type = "h",
lwd = 1,
xlab = "Base Position",
main = "Resection of WT Polb Sequences",
ylab = "% of reads containing with deletion of base",
ylim = c(0, 1))
#venus
dfVENUS <- read.table("/home/edanner/workspace/V2Seq/Analysis/output/TargetedVenusDel/DelVenus.coverageStats.tsv", header=TRUE)
plot(dfVENUS$bp, dfVENUS$delRatio,
type = "h",
lwd = 1,
xlab = "Base Position",
main = "Resection of 'Deletion' Sequences",
ylab = "% of reads containing with deletion of base",
ylim = c(0, 1))
#mCherry
dfmCherry <- read.table("/home/edanner/workspace/V2Seq/Analysis/output/TargetedCherry/Cherrydata.coverageStats.tsv", header=TRUE)
plot(dfmCherry$bp, dfmCherry$delRatio,
type = "h",
lwd = 1,
xlab = "Base Position",
main = "Resection of 'Replacement' Sequences",
ylab = "% of reads containing with deletion of base",
ylim = c(0, 1))
#mCherry
dfmCherry <- read.table("/home/edanner/workspace/V2Seq/Analysis/output/TargetedCherry/Cherrydata.coverageStats.tsv", header=TRUE)
ylim = c(0, 1))
plot(dfmCherry$bp, dfmCherry$delRatio,
type = "h",
lwd = 1,
xlab = "Base Position",
main = "*Smoothed* Resection of Correct Knock-in mCherry alleles",
ylab = "% of reads containing with deletion of base",
ylim = c(0, 1))
#Smoothed
plot(tapply(dfmCherry$delRatio, cut(dfmCherry$bp, seq(1, 2650, by=3)), mean),
type = "h",
lwd = 1,
xlab = "Base Position",
main = " *Smoothed* Resection of Correct Knock-in mCherry alleles ",
ylab = "% of reads containing with deletion of base",
ylim = c(0, 1))
plot(dfmCherry$bp, dfmCherry$delRatio,
type = "h",
lwd = 1,
xlab = "Base Position",
main = "*Smoothed* Resection of Correct Knock-in mCherry alleles",
ylab = "% of reads containing with deletion of base",
ylim = c(0, 1))
(dfmCherry$bp, dfmCherry$delRatio,
type = "h",
lwd = 1,
xlab = "Base Position",
main = "*Smoothed* Resection of Correct Knock-in mCherry alleles",
ylab = "% of reads containing with deletion of base",
ylim = c(0, 1))
plot(dfmCherry$bp, dfmCherry$delRatio,
type = "h",
lwd = 1,
xlab = "Base Position",
main = "*Smoothed* Resection of Correct Knock-in mCherry alleles",
ylab = "% of reads containing with deletion of base",
ylim = c(0, 1))
#Smoothed
plot(tapply(dfmCherry$delRatio, cut(dfmCherry$bp, seq(1, 2650, by=3)), mean),
type = "h",
lwd = 1,
xlab = "Base Position",
main = " *Smoothed* Resection of Correct Knock-in mCherry alleles ",
ylab = "% of reads containing with deletion of base",
ylim = c(0, 1))
plot(dfmCherry$bp, dfmCherry$delRatio,
type = "h",
lwd = 1,
xlab = "Base Position",
main = "* Resection of Correct Knock-in mCherry alleles",
ylab = "% of reads containing with deletion of base",
ylim = c(0, 1))
#Smoothed
plot(tapply(dfmCherry$delRatio, cut(dfmCherry$bp, seq(1, 2650, by=3)), mean),
type = "h",
lwd = 1,
xlab = "Base Position",
main = " *Smoothed* Resection of Correct Knock-in mCherry alleles ",
ylab = "% of reads containing with deletion of base",
ylim = c(0, 1))
#zooming in on the left indel
plot(dfPolbWT$bp[921:1121], dfPolbWT$delRatio[925:1025],
type = "h",
lwd = 1,
xlab = "Base Position",
main = "Resection at left cutsite",
ylab = "% of reads containing with deletion of base",
ylim = c(0, 0.5))
#zooming in on the left indel
plot(dfmCherry$bp[921:1121], dfmCherry$delRatio[925:1025],
type = "h",
lwd = 1,
xlab = "Base Position",
main = "Resection at left cutsite",
ylab = "% of reads containing with deletion of base",
ylim = c(0, 0.5))
#zooming in on the left indel
plot(dfmCherry$bp[825:1025], dfmCherry$delRatio[825:1025],
type = "h",
lwd = 1,
xlab = "Base Position",
main = "Resection at left cutsite",
ylab = "% of reads containing with deletion of base",
ylim = c(0, 0.5))
#Smoothed
plot(tapply(dfmCherry$delRatio, cut(dfmCherry$bp, seq(1, 2650, by=3)), mean),
type = "h",
lwd = 1,
xlab = "Base Position",
main = " *Smoothed* Resection of Correct Knock-in mCherry alleles ",
ylab = "% of reads containing with deletion of base",
ylim = c(0, 1))
#zooming in on the left indel
plot(dfmCherry$bp[825:1025], dfmCherry$delRatio[825:1025],
type = "h",
lwd = 1,
xlab = "Base Position",
main = "Resection at left cutsite",
ylab = "% of reads containing with deletion of base",
ylim = c(0, 0.5))
#zoomign in on the right indel
plot(dfmCherry$bp[1657:1857], dfmCherry$delRatio[1657:1857],
type = "h",
lwd = 1,
xlab = "Base Position",
main = "Resection at Right Cutsite",
ylab = "% of reads containing the base",
ylim = c(0, 0.5))
#zooming in on the left indel
plot(dfmCherry$bp[825:1025], dfmCherry$delRatio[825:1025],
type = "h",
lwd = 1,
xlab = "Base Position",
main = "Resection at left cutsite",
ylab = "% of reads containing with deletion of base",
ylim = c(0, 0.5))
#zoomign in on the right indel
plot(dfmCherry$bp[1657:1857], dfmCherry$delRatio[1657:1857],
type = "h",
lwd = 1,
xlab = "Base Position",
main = "Resection at Right Cutsite",
ylab = "% of reads containing the base",
ylim = c(0, 0.5))
plot(dfVENUS$bp, dfVENUS$insRatio,
type = "h",
lwd = 1,
xlab = "Base Position",
main = "Resection of WT Reporter Seq",
ylab = "% of reads containing deletion of base",
ylim = c(0, 1))
#zooming in on the cut site
plot(dfVENUS$bp[825:1025], dfVENUS$delRatio[825:1025],
type = "h",
lwd = 1,
xlab = "Base Position",
main = "Resection at left cutsite",
ylab = "% of reads containing with deletion of base",
ylim = c(0, 1))
#zooming in on the cut site
plot(dfVENUS$bp[825:1025], dfVENUS$delRatio[825:1025],
type = "h",
lwd = 1,
xlab = "Base Position",
main = "Resection at left cutsite",
ylab = "% of reads containing with deletion of base",
ylim = c(0, 1))
plot(dfVENUS$bp, dfVENUS$delRatio,
type = "h",
lwd = 1,
xlab = "Base Position",
main = "Resection of 'Deletion' Sequences",
ylab = "% of reads containing with deletion of base",
ylim = c(0, 1))
#venus
dfVENUS <- read.table("/home/edanner/workspace/V2Seq/Analysis/output/TargetedVenusDelNew/DelVenus.coverageStats.tsv", header=TRUE)
plot(dfVENUS$bp, dfVENUS$delRatio,
type = "h",
lwd = 1,
xlab = "Base Position",
main = "Resection of 'Deletion' Sequences",
ylab = "% of reads containing with deletion of base",
ylim = c(0, 1))
#zooming in on the cut site
plot(dfVENUS$bp[825:1025], dfVENUS$delRatio[825:1025],
type = "h",
lwd = 1,
xlab = "Base Position",
main = "Resection at left cutsite",
ylab = "% of reads containing with deletion of base",
ylim = c(0, 1))
plot(dfVENUS$bp, dfVENUS$insRatio,
type = "h",
lwd = 1,
xlab = "Base Position",
main = "Resection of WT Reporter Seq",
ylab = "% of reads containing deletion of base",
ylim = c(0, 1))
#HIROSPolb Del
dfPolbReplace <- read.table("/home/edanner/workspace/V2Seq/Analysis/output/PolbTargetedReplace/PolbTargetReplace.coverageStats.tsv", header=TRUE)
plot(dfPolbReplace$bp, dfPolbReplace$delRatio,
type = "h",
lwd = 1,
xlab = "Base Position",
main = "Resection of Polb Exon Exchanged Alleles ",
ylab = "% of reads with base deleted",
ylim = c(0, 1))
#HIROSPolb Del
dfPolbReplace <- read.table("/home/edanner/workspace/V2Seq/Analysis/output/PolbTargetedReplace/PolbTargetReplace.coverageStats.tsv", header=TRUE)
plot(dfPolbReplace$bp, dfPolbReplace$delRatio,
type = "h",
lwd = 1,
xlab = "Base Position",
main = "Resection of Polb Exon Exchanged Alleles ",
ylab = "% of reads with base deleted",
ylim = c(0, 1))
#Smoothed
plot(tapply(dfPolbReplace$delRatio, cut(dfPolbReplace$bp, seq(1, 4248, by=3)), mean),
type = "h",
lwd = 1,
xlab = "Base Position",
main = " *Smoothed* Resection in Correct Polb Replacement Alelles ",
ylab = "% of reads with deletion of base",
ylim = c(0, 1))
plot(dfPolbReplace$bp, dfPolbReplace$delRatio,
type = "h",
lwd = 1,
xlab = "Base Position",
main = "Resection of Polb Exon Exchanged Alleles ",
ylab = "% of reads with base deleted",
ylim = c(0, 1))
#Smoothed
plot(tapply(dfPolbReplace$delRatio, cut(dfPolbReplace$bp, seq(1, 4248, by=3)), mean),
type = "h",
lwd = 1,
xlab = "Base Position",
main = " *Smoothed* Resection in Correct Polb Replacement Alelles ",
ylab = "% of reads with deletion of base",
ylim = c(0, 1))
#Smoothed
plot(tapply(dfPolbReplace$delRatio, cut(dfPolbReplace$bp, seq(1, 4248, by=4)), mean),
type = "h",
lwd = 1,
xlab = "Base Position",
main = " *Smoothed* Resection in Correct Polb Replacement Alelles ",
ylab = "% of reads with deletion of base",
ylim = c(0, 1))
plot(dfPolbReplace$bp, dfPolbReplace$delRatio,
type = "h",
lwd = 1,
xlab = "Base Position",
main = "Resection of Polb Exon Exchanged Alleles ",
ylab = "% of reads with base deleted",
ylim = c(0, 1))
#Smoothed
plot(tapply(dfPolbReplace$delRatio, cut(dfPolbReplace$bp, seq(1, 4248, by=4)), mean),
type = "h",
lwd = 1,
xlab = "Base Position",
main = " *Smoothed* Resection in Correct Polb Replacement Alelles ",
ylab = "% of reads with deletion of base",
ylim = c(0, 1))
plot(dfPolbReplace$bp, dfPolbReplace$delRatio,
type = "h",
lwd = 1,
xlab = "Base Position",
main = "Resection of Polb Exon Exchanged Alleles ",
ylab = "% of reads with base deleted",
ylim = c(0, 1))
#Smoothed
plot(tapply(dfPolbReplace$delRatio, cut(dfPolbReplace$bp, seq(1, 4248, by=3)), mean),
type = "h",
lwd = 1,
xlab = "Base Position",
main = " *Smoothed* Resection in Correct Polb Replacement Alelles ",
ylab = "% of reads with deletion of base",
ylim = c(0, 1))
plot(dfPolbReplace$bp, dfPolbReplace$delRatio,
type = "h",
lwd = 1,
xlab = "Base Position",
main = "Resection of Polb Exon Exchanged Alleles ",
ylab = "% of reads with base deleted",
ylim = c(0, 1))
#Smoothed
plot(tapply(dfPolbReplace$delRatio, cut(dfPolbReplace$bp, seq(1, 4248, by=3)), mean),
type = "h",
lwd = 1,
xlab = "Base Position",
main = " *Smoothed* Resection in Correct Polb Replacement Alelles ",
ylab = "% of reads with deletion of base",
ylim = c(0, 1))
plot(dfPolbReplace$bp, dfPolbReplace$delRatio,
type = "h",
lwd = 1,
xlab = "Base Position",
main = "Resection of Polb Exon Exchanged Alleles ",
ylab = "% of reads with base deleted",
ylim = c(0, 1))
library(data.table)
library(GenomicAlignments)
conda
library(data.table)
setwd("~/workspace/V2Seq/Analysis")
